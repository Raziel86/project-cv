<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://xmlns.jcp.org/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd"
	version="2.1">

	<!--  EntityManagerFactory = liaison avec une et une seule BDD (persistence-unit) -->
	<persistence-unit name="jpa-cv" transaction-type="RESOURCE_LOCAL">
		
		<!-- implémentation de JPA -->
		<provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
		
		<shared-cache-mode>ALL</shared-cache-mode>
		
		<!-- DataSource locale ou JNDI DataSource (en modifiant transaction-type="JTA") 
			<jta-data-source>java:/DefaultDS</jta-data-source> -->

		<!-- classes annotées (si non autodetect hibernate) 
			<class>fr.dawan.JpaHibernateTraining.beans.User</class> 
			ou jar : <jar-file>MyOrderApp.jar</jar-file> -->

		<properties>
			<!-- Configuring JDBC properties -->

			<property name="javax.persistence.jdbc.url" value="jdbc:mysql://localhost:3306/cvinter" />
			<property name="javax.persistence.jdbc.user" value="root" />
			<property name="javax.persistence.jdbc.password" value="" />
			<property name="javax.persistence.jdbc.driver" value="com.mysql.jdbc.Driver" />

		

			<!-- Hibernate properties -->
			<!-- Scan for annotated classes and Hibernate mapping XML files (.hbm) -->
			<property name="hibernate.archive.autodetection" value="class, hbm" />

			<!-- Mettre à false en production -->
			<property name="hibernate.show_sql" value="true" />
			<property name="hibernate.format_sql" value="true" />
			<!-- <property name="hibernate.generate_statistics" value="true"/>
			 -->
			
			
			
			
			<!--  Dialect = classe qui permet de traduire le language objet => sql natif -->
			<property name="hibernate.dialect" value="org.hibernate.dialect.MySQL5InnoDBDialect" />
			
			<!-- hibernate mapping to data definition language
				comment hibernate se comportera avec la Bdd
				update : créer (mais pas suppression)
				create-drop : suppression totale de la table et on recrée (perte de données)           
			 -->
		<property name="hibernate.hbm2ddl.auto" value="update" />
		<!-- change to" update" -->

		

		<property name="hibernate.cache.use_second_level_cache" value="true" />
		<property name="hibernate.cache.region.factory_class" 
				  value="org.hibernate.cache.ehcache.EhCacheRegionFactory" />
		<property name="hibernate.cache.use_query_cache" value="true" />



			<!-- Configuring Connection Pool -->
			<property name="hibernate.c3p0.min_size" value="5" />
			<property name="hibernate.c3p0.max_size" value="20" />
			<property name="hibernate.c3p0.timeout" value="500" />
			<property name="hibernate.c3p0.max_statements" value="50" />
			<property name="hibernate.c3p0.idle_test_period" value="2000" />
		</properties>
	</persistence-unit>
</persistence>